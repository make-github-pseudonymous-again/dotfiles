#!/usr/bin/env bash

if [ "$(id -u)" = 0 ] ; then
  echo 'must NOT be run as root'
  exit 1
fi

DOTFILES="$(dirname "$(dirname "${BASH_SOURCE[0]}")")";

packages="$(sed -e 's/\s*#.*$//g' -e '/^$/d' "$DOTFILES"/bootstrap/packages/node)"

_sudo () {
  sudo PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 "$@"
}

if false; then
#if command -v yarn 1>/dev/null; then

  echo "  # using yarn"

  yarn_installed="$(jq -r '.dependencies | keys[]' /usr/local/share/.config/yarn/global/package.json 2>/dev/null)"

  function _install {
    to_install="$(comm -23 <(sort <<< "$packages") <(sort <<< "$yarn_installed"))"
    if [ -z "$to_install" ] ; then
      echo "  > nothing to install"
    else
      echo "  > installing ~ $(tr '\n' ' ' <<< "$to_install")"
      _sudo yarn global add $to_install
    fi
  }

  function _update {
    echo "  - upgrade global packages"
    _sudo yarn global upgrade --latest || exit "$?"
  }

elif command -v npm 1>/dev/null; then

  echo "  # using npm"

  npm_root="$(npm root -g)"
  all_installed="$(find "$npm_root" -maxdepth "$(<<< "$npm_root" sed 's:/: :g' | wc -w)" -name package.json | cut -d/ -f5- | sed -e 's:/package.json$::' -e '/^[^@].*\//d' | sort)"
  pacman_installed="$(pacman -Qk $all_installed 2>/dev/null | cut -d: -f1 | sort)"
  npm_installed="$(comm -23 <(sort <<< "$all_installed") <(sort <<< "$pacman_installed"))"

  function _install {
    echo "   - install global packages"
    to_install="$(comm -23 <(sort <<< "$packages") <(sort <<< "$all_installed"))"
    if [ -z "$to_install" ] ; then
      echo "   > nothing to install"
    else
      echo "   > installing ~ $(tr '\n' ' ' <<< "$to_install")"
      _sudo npm install -g $to_install || exit "$?"
    fi
  }

  function _update {
    echo "  - update global packages"
    ncu_versions="$(ncu -g --reject "$pacman_installed" | grep '^npm -g install ' | cut -d' ' -f4- | tr ' ' '\n')"
    if [ -z "$ncu_versions" ] ; then
      echo "   > nothing to update"
    else
      # We check that ncu plays nice
      ncu_packages="$(<<< "$ncu_versions" rev | cut -d@ -f2- | rev | sort)"
      ncu_illegal="$(comm -23 <(sort <<< "$ncu_packages") <(sort <<< "$npm_installed"))"
      if [ -n "$ncu_illegal" ] ; then
        echo "   ! found packages that were never installed in ncu's output ~ $(tr '\n' ' ' <<< "$ncu_illegal")"
        exit 123
      else
        echo "   > updating ~ $(tr '\n' ' ' <<< "$ncu_versions")"
        _sudo npm install -g $ncu_versions || exit "$?"
      fi
    fi
  }

else
  echo 'yarn or npm is not installed, install one via pacman first'
  exit 2
fi

x="${1:-i}"

if [ "$x" = i ] ; then
  _install
elif [ "$x" = u ] ; then
  _update
else
  echo "Option $x is not valid."
  exit 3
fi
