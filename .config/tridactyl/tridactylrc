" This will have to do until someone writes us a nice syntax file :)
" vim: set filetype=vim:

"" set theme
colors sane

"" Disable all default searchurls.
"" See https://github.com/tridactyl/tridactyl/issues/2306#issuecomment-615798111
"" Defaults are here https://github.com/tridactyl/tridactyl/blob/master/src/lib/config.ts
jsb Object.keys(tri.config.get("searchurls")).reduce((prev, u) => prev.then(_ => tri.config.set("searchurls", u, null)), Promise.resolve())

"" Hint chars
set hintchars hjkasdfgyuopqwertzxcvb


"" search engines

" duckduckgo
set searchurls.g    https://html.duckduckgo.com/html?q=%s
" google
set searchurls.goo  https://www.google.com/search?q=%s
" google lucky
set searchurls.gol  https://www.google.com/search?btnI=I'm+Feeling+Lucky&q=%s
" searx
set searchurls.srx  https://searx.me/?category_general=on&q=%s
" qwant
set searchurls.qw   https://www.qwant.com/?q=%s
" bing
set searchurls.bing https://www.bing.com/search?q=%s
" yahoo
set searchurls.yaho https://search.yahoo.com/search?p=%s
" startpage
set searchurls.stpg https://startpage.com/do/search?language=english&cat=web&query=%s

" default search engine
set searchengine g


"" search urls

" google images
set searchurls.gi   https://google.com/search?tbm=isch&q=%s
" youtube
set searchurls.yt   https://www.youtube.com/results?search_query=%s

" google maps
set searchurls.gm   https://maps.google.com?q=%s
" open street maps
set searchurls.osm  https://www.openstreetmap.org/search?query=%s

" stackexchange
set searchurls.se   https://stackexchange.com/search?q=%s
" stackoverflow
set searchurls.so   https://stackoverflow.com/search?q=%s

" google scholar
set searchurls.gs   https://scholar.google.com/scholar?q=%s
" dblp
set searchurls.dblp https://dblp.uni-trier.de/search?q=%s
" arxiv
set searchurls.arx  https://arxiv.org/search/?searchtype=all&query=%s

" arch wiki
set searchurls.arch https://wiki.archlinux.org/?search=%s
" gentoo wiki
set searchurls.gentoo https://wiki.gentoo.org/index.php?title=Special%3ASearch&profile=default&fulltext=Search&search=%s

" arch packages
set searchurls.arcp https://archlinux.org/packages/?q=%s
" aur packages
set searchurls.aur  https://aur.archlinux.org/packages/?K=%s

" CVE
set searchurls.cve  https://cve.circl.lu/cve/%s

" github
set searchurls.gh   https://github.com/%s
set searchurls.ghs  https://github.com/search?q=%s
" npm
set searchurls.npm  https://www.npmjs.com/search?q=%s
" mdn
set searchurls.mdn  https://developer.mozilla.org/en-US/search?q=%s
" node
set searchurls.node https://html.duckduckgo.com/html?q=site%3Anodejs.org%2Fapi%20%s
" python 3
set searchurls.py   https://docs.python.org/3/search.html?check_keywords=yes&area=default&q=%s
" python 2
set searchurls.py2  https://docs.python.org/2/search.html?check_keywords=yes&area=default&q=%s
" c++
set searchurls.cpp  http://www.cplusplus.com/search.do?q=%s
set searchurls.c++  https://en.cppreference.com/w/?search=%s
" LaTeX
set searchurls.ltx  https://en.wikibooks.org/wiki/Special:Search?prefix=LaTeX/&search=%s

" ipfs
set searchurls.ipfs https://ipfs.io/ipfs/%s

" wikipedia (in English)
set searchurls.w    https://en.wikipedia.org/wiki/%s
" wikipedia search (in English)
set searchurls.ws   https://en.wikipedia.org/wiki/Special:Search/%s
" wikipedia (in French)
set searchurls.wfr  https://fr.wikipedia.org/wiki/%s
" wikipedia search (in French)
set searchurls.wsfr https://fr.wikipedia.org/wiki/Special:Search/%s

" English wiktionary
set searchurls.dict https://en.wiktionary.org/wiki/%s
" French wiktionary
set searchurls.dico https://fr.wiktionary.org/wiki/%s
" French dictionary
set searchurls.cnrt http://www.cnrtl.fr/lexicographie/%s

" translation to english
set searchurls.gt   https://translate.google.com/#auto/en/%s
" translation to french
set searchurls.gtfr https://translate.google.com/#auto/fr/%s

" amazon com
set searchurls.amco https://www.amazon.com/s/?field-keywords=%s
" amazon fr
set searchurls.amfr https://www.amazon.fr/s/?field-keywords=%s
" amazon de
set searchurls.amde https://www.amazon.de/s/?field-keywords=%s

" ikea be
set searchurls.ikea https://www.ikea.com/be/fr/search?k=%s

" google ngrams
set searchurls.ng https://books.google.com/ngrams/graph?content=%s

" insect
set searchurls.ins https://insect.sh/?q=%s

" twitter
set searchurls.twt https://twitter.com/search?q=%s


"" bindings

" route page through sci-hub's proxy
unbind x
bind xd js window.location = 'https://sci-hub.do/' + window.location.href
bind xh js window.location = 'https://sci-hub.tw/' + window.location.href
bind xt js window.location = 'https://sci-hub.st/' + window.location.href
bind xs js window.location = 'https://sci-hub.se/' + window.location.href
bind xl js window.location = 'https://sci-hub.ltd/' + window.location.href

" type xa to route page through archive.org's proxy
bind xa js window.location = 'https://web.archive.org/' + window.location.href


"" quickmarks

" github homepage
quickmark g https://github.com
" github dotfiles
quickmark d https://github.com/aureooms/dotfiles
" github repositories
quickmark r https://github.com/aureooms?tab=repositories
" github trending
quickmark t https://github.com/trending
" github notifications
quickmark n https://github.com/notifications
" algo group
quickmark u https://algo.ulb.be
" barc
quickmark k https://barc.ku.dk
" coauthor
quickmark c https://coauthor.ulb.be
" homepage
quickmark h https://aurelienooms.be
" academic homepage
quickmark a https://research.aurelienooms.be
" ku science webprint
quickmark p https://webprint.science.ku.dk
" barc chat
quickmark b https://basicalgoresearchcph.slack.com
" lifex chat
quickmark l https://lifexdk.slack.com
" ku support
quickmark s https://sd.ku.dk

"" homepages
set home http://localhost:7342/newtab.html
set newtab http://localhost:7342/newtab.html


"" containers
set auconcreatecontainer true
unset autocontain

js tri.config.set("autocontain", "^https?://(www\\.|maps\\.|)google\\.(com|fr|be|dk|es|nl|de|se)/", "google-search")
js tri.config.set("autocontain", "^https?://(?!(www|maps)\\.)[^/]*\\.google\\.(com|fr|be|dk|es|nl|de|se)/", "google")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)gmail\\.com/", "google")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)facebook\\.com/", "facebook")

js tri.config.set("autocontain", "^https?://([^/]*\\.|)stackoverflow\\.com/", "se")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)stackexchange\\.com/", "se")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)mathoverflow\\.com/", "se")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)mathoverflow\\.net/", "se")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)superuser\\.com/", "se")

js tri.config.set("autocontain", "^https?://([^/]*\\.|)youtube\\.com/", "yt")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)youtu\\.be/", "yt")

js tri.config.set("autocontain", "^https?://([^/]*\\.|)amazon\\.(com|fr|de)/", "amzn")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)mediamarkt\\.(be)/", "mediamarkt")

js tri.config.set("autocontain", "^https?://([^/]*\\.|)github\\.com/", "github")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)indfak2\\.dk/", "barc")
js tri.config.set("autocontain", "^https?://([^/]*\\.|)reddit\\.com/", "reddit")
