#!/usr/bin/env python3

import sys
import json
from typing import Iterable
from dataclasses import dataclass, asdict

@dataclass
class Cell:
    address: str|None = None
    channel: int|None = None
    frequency: float|None = None
    quality: float|None = None
    signal: int|None = None
    essid: str = ""


def cells(iterable: Iterable[str]):

    cell = None

    for line in iterable:
        if line.startswith('Cell '):
            if cell is not None:
                yield cell
            cell = Cell(
                address = line.split(': ')[1]
            )
            continue

        assert cell is not None

        if line.startswith('Frequency:'):
            cell.frequency = float(line.split(':')[1].split(' ')[0])
        elif line.startswith('Channel:'):
            cell.channel = int(line.split(':')[1])
        elif line.startswith('ESSID:'):
            if cell.essid == "":
                cell.essid = line.split(':')[1][1:-1]
        elif line.startswith('Quality='):
            _quality, _signal = line.split('  ')
            value, maximum = _quality.split('=')[1].split('/')
            cell.quality = int(value) / int(maximum)
            cell.signal = int(_signal.split('=')[1].split(' ')[0])

    if cell is not None:
        yield cell

data = []

for cell in cells(map(str.strip, sys.stdin)):
    data.append(asdict(cell))

json.dump(data, sys.stdout)
